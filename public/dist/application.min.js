"use strict";function OrderDirective($tcOrder,$interpolate,$compile,$parse,$mdToast){function compile(element,attr){console.log(element);element.find("tc-order-label").remove();return function(scope,element,attr,ctrls){scope.orderDate=moment()._d,scope.deliberyDate=moment()._d,scope.address="Not Yet",scope.numOrder=1,scope.detailInfo="빠른베송 부탁 드립니다.",scope.price=900*scope.numOrder,scope.getTotal=function(){scope.price=900*scope.numOrder};var toastPosition={bottom:!0,top:!1,left:!1,right:!0},getToastPosition=function(){return Object.keys(toastPosition).filter(function(pos){return toastPosition[pos]}).join(" ")};scope.createToast=function(){$mdToast.show({controller:function($scope,$mdToast){$scope.closeToast=function(){$mdToast.hide()}},template:'<md-toast> <span flex>Submitted</span> <md-button ng-click="closeToast()">Close </md-button> </md-toast>',hideDelay:6e3,position:getToastPosition()})}}}return{restrict:"E",scope:{userInfo:"=userInfo"},templateUrl:"modules/the-clean/directives/template/tc-order-ui-tpl.html",require:["tcOrder"],compile:compile,controller:"TheCleanCrudsController"}}function OrderHeader($mdTheming){return{restrict:"E",link:function($scope,$element,$attr){function reverseRepeat(tl){tl.reverse(0)}function complete(tl){tl.restart(),console.log("Complete")}function prepNext(timeline,slide){TweenMax.set(slide,{display:"none"})}var progressBar='<div id="progressBar"></div>';$element.append(progressBar);var images=$element.find("img"),tl=new TimelineMax({onReverseComplete:reverseRepeat,onReverseCompleteParams:["{self}"],onComplete:complete,onCompleteParams:["{self}"]}),time=3.2,a1=(TweenMax.set(images,{display:"none"}),TweenMax.to(images[0],time,{autoAlpha:0,display:"block"})),a2=TweenMax.to(images[1],time,{autoAlpha:0,display:"block"}),a3=TweenMax.to(images[2],time,{autoAlpha:0,display:"block"}),slideTl1=new TimelineMax({onComplete:prepNext,onCompleteParams:["{self}",images[0]]});slideTl1.add(a1).from($("#progressBar"),slideTl1.duration(),{scaleX:0,transformOrigin:"0px 0px",ease:Linear.easeNone},0);var slideTl2=new TimelineMax({onComplete:prepNext,onCompleteParams:["{self}",images[1]]});slideTl2.add(a2).from($("#progressBar"),slideTl2.duration(),{scaleX:0,transformOrigin:"0px 0px",ease:Linear.easeNone},0);var slideTl3=new TimelineMax({onComplete:prepNext,onCompleteParams:["{self}",images[2]]});slideTl3.add(a3).from($("#progressBar"),slideTl3.duration(),{scaleX:0,transformOrigin:"0px 0px",ease:Linear.easeNone},0),tl.set(images,{display:"none"}).add(slideTl1).add(slideTl2).add(slideTl3).play(),$mdTheming($element)}}}function GetRequires($parse){function preLink(scope,element,attr,ctrls){function configureAria(){element.attr({id:"select_menu_"+$mdUtil.nextUid(),role:"listbox","aria-multiselectable":selectCtrl.isMultiple?"true":"false"})}function keyListener(e){(13==e.keyCode||32==e.keyCode)&&clickListener(e)}function clickListener(ev){var option=$mdUtil.getClosest(ev.target,"md-option"),optionCtrl=option&&angular.element(option).data("$mdOptionController");if(option&&optionCtrl){var optionHashKey=selectCtrl.hashGetter(optionCtrl.value),isSelected=angular.isDefined(selectCtrl.selected[optionHashKey]);scope.$apply(function(){selectCtrl.isMultiple?isSelected?selectCtrl.deselect(optionHashKey):selectCtrl.select(optionHashKey,optionCtrl.value):isSelected||(selectCtrl.deselect(Object.keys(selectCtrl.selected)[0]),selectCtrl.select(optionHashKey,optionCtrl.value)),selectCtrl.refreshViewValue()})}}var selectCtrl=ctrls[0],ngModel=ctrls[1];element.on("click"),element.on("keypress",keyListener),ngModel&&selectCtrl.init(ngModel),configureAria()}return{restrict:"E",require:["tcGetRequires","?ngModel"],controller:GetRequiresController,link:{pre:preLink}}}function SelectProvider($$interimElementProvider){function selectDefaultOptions($tcOrder,$mdConstant,$$rAF,$mdUtil,$mdTheming,$timeout){function onShow(scope,element,opts){function configureAria(){opts.selectEl.attr("aria-labelledby",opts.target.attr("id")),opts.target.attr("aria-owns",opts.selectEl.attr("id")),opts.target.attr("aria-expanded","true")}function activateInteraction(){function focusOption(direction){var optionsArray=nodesToArray(optionNodes),index=optionsArray.indexOf(opts.focusedNode);-1===index?index=0:"next"===direction&&index<optionsArray.length-1?index++:"prev"===direction&&index>0&&index--;var newOption=opts.focusedNode=optionsArray[index];newOption&&newOption.focus()}function focusNextOption(){focusOption("next")}function focusPrevOption(){focusOption("prev")}function closeMenu(){opts.restoreFocus=!0,scope.$evalAsync(function(){$tcOrder.hide(selectCtrl.ngModel.$viewValue)})}if(!opts.isRemoved){var selectCtrl=opts.selectEl.controller("mdSelectMenu")||{};element.addClass("md-clickable"),opts.backdrop&&opts.backdrop.on("click",function(e){e.preventDefault(),e.stopPropagation(),opts.restoreFocus=!1,scope.$apply($tcOrder.cancel)}),opts.selectEl.on("keydown",function(ev){switch(ev.keyCode){case $mdConstant.KEY_CODE.SPACE:case $mdConstant.KEY_CODE.ENTER:var option=$mdUtil.getClosest(ev.target,"md-option");option&&(opts.selectEl.triggerHandler({type:"click",target:option}),ev.preventDefault());break;case $mdConstant.KEY_CODE.TAB:case $mdConstant.KEY_CODE.ESCAPE:ev.preventDefault(),opts.restoreFocus=!0,scope.$apply($tcOrder.cancel)}}),opts.selectEl.on("keydown",function(ev){switch(ev.keyCode){case $mdConstant.KEY_CODE.UP_ARROW:return focusPrevOption();case $mdConstant.KEY_CODE.DOWN_ARROW:return focusNextOption()}}),selectCtrl.isMultiple||(opts.selectEl.on("click",closeMenu),opts.selectEl.on("keydown",function(e){(32==e.keyCode||13==e.keyCode)&&closeMenu()}))}}if(!opts.target)throw new Error('$tcOrder.show() expected a target element in options.target but got "'+opts.target+'"!');angular.extend(opts,{isRemoved:!1,target:angular.element(opts.target),parent:angular.element(opts.parent),selectEl:element.find("md-select-menu"),contentEl:element.find("md-content"),backdrop:opts.hasBackdrop&&angular.element('<md-backdrop class="md-select-backdrop">')}),configureAria(),element.removeClass("md-leave");var optionNodes=opts.selectEl[0].getElementsByTagName("md-option");return opts.loadingAsync&&opts.loadingAsync.then&&opts.loadingAsync.then(function(){scope.$$loadingAsyncDone=!0,$$rAF(function(){$$rAF(function(){opts.isRemoved||animateSelect(scope,element,opts)})})}),opts.disableParentScroll&&(opts.disableTarget=opts.parent.find("md-content"),opts.disableTarget.length||(opts.disableTarget=opts.parent),opts.lastOverflow=opts.disableTarget.css("overflow"),opts.disableTarget.css("overflow","hidden")),$timeout(activateInteraction,75,!1),opts.backdrop&&($mdTheming.inherit(opts.backdrop,opts.parent),opts.parent.append(opts.backdrop)),opts.parent.append(element),$$rAF(function(){$$rAF(function(){opts.isRemoved||animateSelect(scope,element,opts)})}),$mdUtil.transitionEndPromise(opts.selectEl,{timeout:350})}function onRemove(scope,element,opts){opts.isRemoved=!0,element.addClass("md-leave").removeClass("md-clickable"),opts.target.attr("aria-expanded","false"),opts.disableParentScroll&&$mdUtil.floatingScrollbars()&&(opts.disableTarget.css("overflow",opts.lastOverflow),delete opts.lastOverflow,delete opts.disableTarget);var mdSelect=opts.selectEl.controller("mdSelect");return mdSelect&&mdSelect.setLabelText(opts.selectEl.controller("mdSelectMenu").selectedLabels()),$mdUtil.transitionEndPromise(element,{timeout:350}).then(function(){element.removeClass("md-active"),opts.parent[0].removeChild(element[0]),opts.backdrop&&opts.backdrop.remove(),opts.restoreFocus&&opts.target.focus()})}function animateSelect(scope,element,opts){var centeredNode,containerNode=element[0],targetNode=opts.target[0],parentNode=opts.parent[0],selectNode=opts.selectEl[0],contentNode=opts.contentEl[0],parentRect=parentNode.getBoundingClientRect(),targetRect=$mdUtil.clientRect(targetNode,parentNode),shouldOpenAroundTarget=!1,bounds={left:parentNode.scrollLeft+SELECT_EDGE_MARGIN,top:parentNode.scrollTop+SELECT_EDGE_MARGIN,bottom:parentRect.height+parentNode.scrollTop-SELECT_EDGE_MARGIN,right:parentRect.width-SELECT_EDGE_MARGIN},spaceAvailable={top:targetRect.top-bounds.top,left:targetRect.left-bounds.left,right:bounds.right-(targetRect.left+targetRect.width),bottom:bounds.bottom-(targetRect.top+targetRect.height)},maxWidth=parentRect.width-2*SELECT_EDGE_MARGIN,isScrollable=contentNode.scrollHeight>contentNode.offsetHeight,selectedNode=selectNode.querySelector("md-option[selected]"),optionNodes=selectNode.getElementsByTagName("md-option"),optgroupNodes=selectNode.getElementsByTagName("md-optgroup");centeredNode=selectedNode?selectedNode:optgroupNodes.length?optgroupNodes[0]:optionNodes.length?optionNodes[0]:contentNode.firstElementChild||contentNode,contentNode.offsetWidth>maxWidth&&(contentNode.style["max-width"]=maxWidth+"px"),shouldOpenAroundTarget&&(contentNode.style["min-width"]=targetRect.width+"px"),isScrollable&&selectNode.classList.add("md-overflow");var selectMenuRect=selectNode.getBoundingClientRect(),centeredRect=getOffsetRect(centeredNode);if(centeredNode){var centeredStyle=window.getComputedStyle(centeredNode);centeredRect.paddingLeft=parseInt(centeredStyle.paddingLeft,10)||0,centeredRect.paddingRight=parseInt(centeredStyle.paddingRight,10)||0}var focusedNode=centeredNode;if("MD-OPTGROUP"===(focusedNode.tagName||"").toUpperCase()&&(focusedNode=optionNodes[0]||contentNode.firstElementChild||contentNode),focusedNode&&(opts.focusedNode=focusedNode,focusedNode.focus()),isScrollable){var scrollBuffer=contentNode.offsetHeight/2;contentNode.scrollTop=centeredRect.top+centeredRect.height/2-scrollBuffer,spaceAvailable.top<scrollBuffer?contentNode.scrollTop=Math.min(centeredRect.top,contentNode.scrollTop+scrollBuffer-spaceAvailable.top):spaceAvailable.bottom<scrollBuffer&&(contentNode.scrollTop=Math.max(centeredRect.top+centeredRect.height-selectMenuRect.height,contentNode.scrollTop-scrollBuffer+spaceAvailable.bottom))}var left,top,transformOrigin;shouldOpenAroundTarget?(left=targetRect.left,top=targetRect.top+targetRect.height,transformOrigin="50% 0",top+selectMenuRect.height>bounds.bottom&&(top=targetRect.top-selectMenuRect.height,transformOrigin="50% 100%")):(left=targetRect.left+centeredRect.left-centeredRect.paddingLeft,top=targetRect.top+targetRect.height/2-centeredRect.height/2-centeredRect.top+contentNode.scrollTop,transformOrigin=centeredRect.left+targetRect.width/2+"px "+(centeredRect.top+centeredRect.height/2-contentNode.scrollTop)+"px 0px",containerNode.style.minWidth=targetRect.width+centeredRect.paddingLeft+centeredRect.paddingRight+"px");var containerRect=containerNode.getBoundingClientRect();containerNode.style.left=clamp(bounds.left,left,bounds.right-containerRect.width)+"px",containerNode.style.top=clamp(bounds.top,top,bounds.bottom-containerRect.height)+"px",selectNode.style[$mdConstant.CSS.TRANSFORM_ORIGIN]=transformOrigin,selectNode.style[$mdConstant.CSS.TRANSFORM]="scale("+Math.min(targetRect.width/selectMenuRect.width,1)+","+Math.min(targetRect.height/selectMenuRect.height,1)+")",$$rAF(function(){element.addClass("md-active"),selectNode.style[$mdConstant.CSS.TRANSFORM]=""})}return{parent:"body",onShow:onShow,onRemove:onRemove,hasBackdrop:!0,disableParentScroll:$mdUtil.floatingScrollbars(),themable:!0}}function clamp(min,n,max){return Math.min(max,Math.max(n,min))}function getOffsetRect(node){return node?{left:node.offsetLeft,top:node.offsetTop,width:node.offsetWidth,height:node.offsetHeight}:{left:0,top:0,width:0,height:0}}return selectDefaultOptions.$inject=["$tcOrder","$mdConstant","$$rAF","$mdUtil","$mdTheming","$timeout"],$$interimElementProvider("$tcOrder").setDefaults({methods:["target"],options:selectDefaultOptions})}var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router",,"ngMaterial"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("cl"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("the-clean-cruds"),ApplicationConfiguration.registerModule("the-clean"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("the-clean-cruds").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTheCleanCruds",{url:"/the-clean-cruds",templateUrl:"modules/the-clean-cruds/views/list-the-clean-cruds.client.view.html"}).state("createTheCleanCrud",{url:"/the-clean-cruds/create",templateUrl:"modules/the-clean-cruds/views/create-the-clean-crud.client.view.html"}).state("viewTheCleanCrud",{url:"/the-clean-cruds/:theCleanCrudId",templateUrl:"modules/the-clean-cruds/views/view-the-clean-crud.client.view.html"}).state("editTheCleanCrud",{url:"/the-clean-cruds/:theCleanCrudId/edit",templateUrl:"modules/the-clean-cruds/views/edit-the-clean-crud.client.view.html"})}]),angular.module("the-clean-cruds").controller("TheCleanCrudsController",["$scope","$stateParams","$location","Authentication","TheCleanCruds",function($scope,$stateParams,$location,Authentication,TheCleanCruds){$scope.authentication=Authentication,$scope.create=function(){var theCleanCrud=new TheCleanCruds({orderDate:this.orderDate,deliberyDate:this.deliberyDate,Address:this.address,numOrder:this.numOrder,detailInfo:this.detailInfo});theCleanCrud.$save(function(response){$location.path("the-clean-cruds/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(theCleanCrud){if(theCleanCrud){theCleanCrud.$remove();for(var i in $scope.theCleanCruds)$scope.theCleanCruds[i]===theCleanCrud&&$scope.theCleanCruds.splice(i,1)}else $scope.theCleanCrud.$remove(function(){$location.path("the-clean-cruds")})},$scope.update=function(){var theCleanCrud=$scope.theCleanCrud;theCleanCrud.$update(function(){$location.path("the-clean-cruds/"+theCleanCrud._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.theCleanCruds=TheCleanCruds.query()},$scope.findOne=function(){$scope.theCleanCrud=TheCleanCruds.get({theCleanCrudId:$stateParams.theCleanCrudId})}}]),angular.module("the-clean-cruds").factory("TheCleanCruds",["$resource",function($resource){return $resource("the-clean-cruds/:theCleanCrudId",{theCleanCrudId:"@_id"},{update:{method:"PUT"}})}]),angular.module("the-clean").config(["$stateProvider","$mdIconProvider",function($stateProvider,$mdIconProvider){$stateProvider.state("tc-order",{url:"/tc-order",templateUrl:"modules/the-clean/views/tc-order.client.view.html"}).state("the-clean",{url:"/the-clean",templateUrl:"modules/the-clean/views/the-clean.client.view.html"}),$mdIconProvider.icon("basket","modules/the-clean/svg/basket.svg"),$mdIconProvider.icon("drum","modules/the-clean/svg/drum.svg")}]),angular.module("the-clean").controller("TcOrderController",["$scope",function($scope){}]),angular.module("the-clean").controller("TheCleanController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.toppings=[{category:"meat",name:"Pepperoni"},{category:"meat",name:"Sausage"},{category:"meat",name:"Ground Beef"},{category:"meat",name:"Bacon"},{category:"veg",name:"Mushrooms"},{category:"veg",name:"Onion"},{category:"veg",name:"Green Pepper"},{category:"veg",name:"Green Olives"}],$scope.tcOrder=!0,$scope.tcStartPage=!1,$scope.tcPrice=!1,$scope.tcUserInfo=!0,$scope.tcProgress=!1,$scope.toggle=function(targetDirective){return targetDirective=!targetDirective},$scope.options={chart:{type:"discreteBarChart",height:450,margin:{top:20,right:20,bottom:60,left:55},x:function(d){return d.label},y:function(d){return d.value},showValues:!0,valueFormat:function(d){return d3.format(",.4f")(d)},transitionDuration:500,xAxis:{axisLabel:"Module(s)"},yAxis:{axisLabel:"Complete(%)",axisLabelDistance:30}}},$scope.data=[{key:"Cumulative Return",values:[{label:"User Interface",value:22},{label:"Backend",value:5},{label:"Start Page",value:5},{label:"Icon Design",value:5},{label:"Complete",value:100}]}]}]),angular.module("the-clean").directive("tcOrder",OrderDirective).directive("tcOrderHeader",OrderHeader).directive("tcGetRequires",GetRequires).provider("$tcOrder",SelectProvider),OrderDirective.$inject=["$tcOrder","$interpolate","$compile","$parse","$mdToast"],OrderHeader.$inject=["$mdTheming"],GetRequires.$inject=["$parse"],SelectProvider.$inject=["$$interimElementProvider"],angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);